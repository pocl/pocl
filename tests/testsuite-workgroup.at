# Testsuite for the kernel compiler's work group function generation functionality.
#
# Makefile.am for pocl/lib/kernel.
# 
# Copyright (c) 2011 Universidad Rey Juan Carlos
# Copyright (c) 2011- Pekka Jääskeläinen / Tampere University of Technology
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

AT_BANNER([Workgroup creation tests])

AT_SETUP([unconditional barriers (full replication)])
AT_KEYWORDS([workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2], 0,
[$(cat $abs_top_srcdir/tests/workgroup/basic_barriers_2_2_2_2.stdout)
])
AT_CLEANUP

AT_SETUP([unconditional barriers (loops)])
AT_KEYWORDS([workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel basic_barriers.cl 2 2 2 2], 0,
[$(cat $abs_top_srcdir/tests/workgroup/basic_barriers_2_2_2_2.stdout)
])
AT_CLEANUP

AT_SETUP([unbarriered for loops (full replication)])
AT_KEYWORDS([workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1], 0, 
[$(cat $abs_top_srcdir/tests/workgroup/forloops_2_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([unbarriered for loops (loops)])
AT_KEYWORDS([workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel forloops.cl 2 2 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/forloops_2_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([barriered for loops (full replication)])
AT_KEYWORDS([workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/loopbarriers_2_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([barriered for loops (loops)])
AT_KEYWORDS([workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel loopbarriers.cl 2 2 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/loopbarriers_2_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([conditional barrier (full replication)])
AT_KEYWORDS([condbar workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/cond_barriers_1_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([conditional barrier (loops)])
AT_KEYWORDS([condbar workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel conditional_barriers.cl 1 2 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/cond_barriers_1_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([b-loop with none of the WIs reaching the barrier (full replication)])
AT_KEYWORDS([b-loop workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/tricky_for_1_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([b-loop with none of the WIs reaching the barrier (loops)])
AT_KEYWORDS([b-loop workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel tricky_for.cl 1 2 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/tricky_for_1_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([forcing horizontal parallelization to some outer loops (repl)])
AT_KEYWORDS([workgroup outerlooppar])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1], 0, 
[$(cat $abs_top_srcdir/tests/workgroup/outerlooppar_2_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([forcing horizontal parallelization to some outer loops (loops)])
AT_KEYWORDS([workgroup outerlooppar])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel outerlooppar.cl 2 2 1 1], 0, 
[$(cat $abs_top_srcdir/tests/workgroup/outerlooppar_2_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([different implicit barrier injection scenarios (loops)])
AT_KEYWORDS([workgroup implicit])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/workgroup/run_kernel implicit_barriers.cl 1 2 1 1], 0, 
[$(cat $abs_top_srcdir/tests/workgroup/implicit_barriers_1_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([loop with two paths to the latch (full replication)])
AT_KEYWORDS([twolatchpaths workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/for_bug_1_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([loop with two paths to the latch (loops)])
AT_KEYWORDS([twolatchpaths workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel for_bug.cl 1 2 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/for_bug_1_2_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([b-loop with two latches (full replication)])
AT_KEYWORDS([twolatches workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/multilatch_bloop_1_3_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([b-loop with two latches (loops)])
AT_KEYWORDS([twolatches workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=loops $abs_top_builddir/tests/workgroup/run_kernel multilatch_bloop.cl 1 3 1 1], 0,
[$(cat $abs_top_srcdir/tests/workgroup/multilatch_bloop_1_3_1_1.stdout)
])
AT_CLEANUP

AT_SETUP([workgroup_sizes: work-items get wrong ids (full replication)])
AT_KEYWORDS([id workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemrepl $abs_top_builddir/tests/workgroup/run_kernel print_all_ids.cl 1 1 1 4 | sort], 0, 
[$(cat $abs_top_srcdir/tests/workgroup/print_all_ids_114114.txt)
])
AT_CLEANUP


AT_SETUP([workgroup_sizes: work-items get wrong ids (loop)])
AT_KEYWORDS([id workgroup])
AT_CHECK_UNQUOTED([POCL_DEVICES=basic POCL_WORK_GROUP_METHOD=workitemloops $abs_top_builddir/tests/workgroup/run_kernel print_all_ids.cl 1 1 1 4 | sort], 0, 
[$(cat $abs_top_srcdir/tests/workgroup/print_all_ids_114114.txt)
])
AT_CLEANUP
