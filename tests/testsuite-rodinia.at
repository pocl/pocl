
dnl POAT_ROD_SETUP(name, extra_keywords) 
m4_define([POAT_ROD_SETUP],[
  AT_SETUP([$1])
  AT_KEYWORDS([rodinia $1 $2])
  AT_SKIP_IF([AS_CASE([" $POAT_TESTSUITES "],[*" rodinia "*],[false],[:])])
  # Rodinia does not (yet) work with the (OCL-)ICD build.
  AT_SKIP_IF([grep -q "#define HAVE_OCL_ICD 1" $abs_top_builddir/config.h])
])
dnl POAT_ROD_CHECK_BUILD(name, extra build cmd)
m4_define([POAT_ROD_CHECK_BUILD],[
  AT_CHECK([make build-$1 -sC ${abs_top_builddir}/examples/Rodinia 2>&1 | egrep -v "^make" $2 ], 0,
[  [[Building Rodinia $1]]
])
])

AT_BANNER([Rodinia 2.0.1 tests])

POAT_ROD_SETUP([backprop],[long])
POAT_ROD_CHECK_BUILD([backprop],[ | egrep -v "^backprop_ocl.cpp:"])
AT_CHECK_UNQUOTED([cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/backprop; ./run | grep .], 0,
[Random number generator seed: 7
Input layer size : 65536
Starting training kernel
num_devices = 1
Performing GPU computation
Finish the training for one iteration
])
AT_CLEANUP

POAT_ROD_SETUP([bfs])
POAT_ROD_CHECK_BUILD([bfs], [ | egrep -v "^CLHelper.h:|^In file included from bfs.cpp:" ])
# Test passes NVIDIA-specific parameters to clBuildProgram which is now
# detected as an unsupported parameter by pocl.
AT_SKIP_IF([true])
AT_CHECK_UNQUOTED([cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/bfs; ./run 2>&1|grep -v "incomplete" | grep -v "argument unused" | grep .], 0,
[Reading File
--cambine:passed:-)
])
AT_CLEANUP

POAT_ROD_SETUP([cfd],[long])
POAT_ROD_CHECK_BUILD([cfd],[| egrep -v "^euler3d.cpp:" ])
AT_CHECK_UNQUOTED([cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/cfd; ./run 2>&1| grep . | egrep -v "incomplete|device.name"], 0,
[--cambine: nel=97046, nelr=97152
Starting...
Saving solution...
Saved solution...
Cleaning up...
Done...
])
AT_CLEANUP

POAT_ROD_SETUP([lud])
POAT_ROD_CHECK_BUILD([lud],[ | egrep -v "^lud.cpp:|^../common/common.c:" ])
AT_CHECK_UNQUOTED([cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/lud/ocl; ./run | grep "Time con" | cut -c -18 | grep .], 0,
[Time consumed(ms):
])
AT_CLEANUP

POAT_ROD_SETUP([hotspot],[long])
POAT_ROD_CHECK_BUILD([hotspot])
AT_CHECK_UNQUOTED([cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/hotspot; ./run | grep "time" | cut -d ' ' -f1 | grep .], 0,
[Kernel
Total
])
AT_CLEANUP

POAT_ROD_SETUP([kmeans])
POAT_ROD_CHECK_BUILD([kmeans],[ | egrep -v "^kmeans.cpp:|^read_input.c:" ])
AT_CHECK_UNQUOTED([cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/kmeans; ./run | grep "Number of" | grep .], 0,
[Number of objects: 494020
Number of features: 34
Number of Iteration: 1
])
AT_CLEANUP

POAT_ROD_SETUP([lavaMD])
POAT_ROD_CHECK_BUILD([lavaMD],[ | egrep -v "^./kernel/kernel_gpu_opencl_wrapper.c:|^rm:" ])
# This test case uses struct kernel arguments which currently do not
# work correctly due to assuming the ABI maps variables 1:1 to kernel
# arguments and at least AMD64 seems to sometimes split the struct
# arguments to multiple scalar arguments. This (falsely) passes with
# the pthread device and crashes with the basic device.
AT_SKIP_IF([true])
AT_CHECK_UNQUOTED([cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/lavaMD; ./run | grep "Total time:"], 0,
[Total time:
])
AT_CLEANUP

POAT_ROD_SETUP([pathfinder])
POAT_ROD_CHECK_BUILD([pathfinder], [ | egrep -v "^OpenCL.cpp:" ])
AT_CHECK_UNQUOTED([cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/pathfinder; \
POCL_MAX_WORK_GROUP_SIZE=2 ./run 2>&1 | grep -v "pocl warning:" ; \
cat result.txt 2>&1 | egrep -v "DEVICE_|PROFILE|VERSION|NAME|EXTENSIONS" | grep .], 0,
[$(cat $abs_top_srcdir/examples/Rodinia/pathfinder.stdout)
])
AT_CLEANUP

POAT_ROD_SETUP([srad])
POAT_ROD_CHECK_BUILD([srad], [ | egrep -v "^main.cpp:" ])
AT_CHECK_UNQUOTED([cd $abs_top_builddir/examples/Rodinia/rodinia_2.0.1/opencl/srad; \
POCL_MAX_WORK_GROUP_SIZE=2 ./run 2>&1 | grep "Total time" | grep .], 0,
[Total time:
])
AT_CLEANUP
